{"version":3,"sources":["appConfig.ts"],"names":["megamime","megamime.appConfig","megamime.appConfig.constructor","megamime.appRun","megamime.appRun.constructor"],"mappings":"AAAA,IAAO,QAAQ,CAsCd;AAtCD,WAAO,QAAQ,EAAC,CAAC;IACbA;QAGIC,mBAAYA,QAAsCA,EAAEA,aAA+BA,EAAEA,kBAAgDA;YACjIC,4CAA4CA;YAC5CA,aAAaA,CAACA,YAAYA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA,CAACA;YAClDA,aAAaA,CAACA,0BAA0BA,CAACA,KAAKA,CAACA,CAACA;YAEhDA,kBAAkBA,CAACA,KAAKA,CAACA,SAASA,CAACA;iBAC9BA,cAAcA,CAACA,MAAMA,CAACA,CAACA;YAE5BA,QAAQA,CAACA,SAASA,CAACA,aAAaA,EAAEA,CAACA,WAAWA,EAAEA,UAAUA,SAASA;oBAC/D,IAAI,WAAW,CAAC;oBAChB,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACtC,WAAW,CAAC,UAAU,GAAG,UAAU,OAAO;wBACtC,IAAI,WAAW,CAAC;wBAChB,WAAW,GAAG,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;wBAC5C,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,uBAAuB,EAAE,IAAI,EAAE,CAAC,CAAC;wBACnI,MAAM,CAAC,WAAW,CAAC;oBACvB,CAAC,CAAC;oBACF,MAAM,CAAC,WAAW,CAAC;gBACvB,CAAC,CAACA,CAACA,CAACA;QACRA,CAACA;QApBMD,iBAAOA,GAAGA,CAACA,UAAUA,EAAEA,eAAeA,EAAEA,oBAAoBA,CAACA,CAACA;QAqBzEA,gBAACA;IAADA,CAvBAD,AAuBCC,IAAAD;IAvBYA,kBAASA,YAuBrBA,CAAAA;IACDA,OAAOA,CAACA,MAAMA,CAACA,UAAUA,CAACA,CAACA,MAAMA,CAACA,SAASA,CAACA,CAACA;IAE7CA;QAEIG,gBAAYA,OAAOA;YACfC,OAAOA,CAACA,UAAUA,EAAEA,CAACA;QACzBA,CAACA;QAHMD,cAAOA,GAAGA,CAACA,SAASA,CAACA,CAAAA;QAIhCA,aAACA;IAADA,CALAH,AAKCG,IAAAH;IALYA,eAAMA,SAKlBA,CAAAA;IACDA,OAAOA,CAACA,MAAMA,CAACA,UAAUA,CAACA,CAACA,GAAGA,CAACA,MAAMA,CAACA,CAACA;IAEvCA,kBAAkBA;IAClBA,OAAOA,CAACA,MAAMA,CAACA,UAAUA,CAACA,CAACA,KAAKA,CAACA,QAAQA,EAAEA,MAAMA,CAACA,CAAAA;IAClDA,OAAOA,CAACA,MAAMA,CAACA,UAAUA,CAACA,CAACA,KAAKA,CAACA,QAAQA,EAAEA,MAAMA,CAACA,CAAAA;AACtDA,CAACA,EAtCM,QAAQ,KAAR,QAAQ,QAsCd","file":"appConfig.js","sourcesContent":["module megamime {\r\n    export class appConfig\r\n    {\r\n        static $inject = ['$provide', '$httpProvider', '$mdThemingProvider'];\r\n        constructor($provide: angular.auto.IProvideService, $httpProvider: ng.IHttpProvider, $mdThemingProvider: ng.material.IThemingProvider) {\r\n            // Add the interceptor to the $httpProvider.\r\n            $httpProvider.interceptors.push('apiInterceptor');\r\n            $httpProvider.useLegacyPromiseExtensions(false);\r\n\r\n            $mdThemingProvider.theme('default')\r\n                .primaryPalette('grey');\r\n\r\n            $provide.decorator('GridOptions', ['$delegate', function ($delegate) {\r\n                var gridOptions;\r\n                gridOptions = angular.copy($delegate);\r\n                gridOptions.initialize = function (options) {\r\n                    var initOptions;\r\n                    initOptions = $delegate.initialize(options);\r\n                    angular.extend(initOptions, { enableGridMenu: true, exporterMenuCsv: true, exporterMenuPdf: true, gridMenuShowHideColumns: true });\r\n                    return initOptions;\r\n                };\r\n                return gridOptions;\r\n            }]);\r\n        }\r\n    }\r\n    angular.module('megamine').config(appConfig);\r\n\r\n    export class appRun {\r\n        static $inject = ['session']\r\n        constructor(session) {\r\n            session.initialize();\r\n        }\r\n    }\r\n    angular.module('megamine').run(appRun);\r\n   \r\n    //global variables\r\n    angular.module('megamine').value('toastr', toastr)\r\n    angular.module('megamine').value('moment', moment)\r\n}\r\n"],"sourceRoot":"/source/"}