{"version":3,"sources":["appConfig.ts"],"names":[],"mappings":"AAAA,IAAO,QAAQ,CAsCd;AAtCD,WAAO,QAAQ,EAAC,CAAC;IACb;QAGI,mBAAY,QAAsC,EAAE,aAA+B,EAAE,kBAAgD;YACjI,4CAA4C;YAC5C,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAClD,aAAa,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;YAEhD,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;iBAC9B,cAAc,CAAC,MAAM,CAAC,CAAC;YAE5B,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,UAAU,SAAS;oBAC/D,IAAI,WAAW,CAAC;oBAChB,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACtC,WAAW,CAAC,UAAU,GAAG,UAAU,OAAO;wBACtC,IAAI,WAAW,CAAC;wBAChB,WAAW,GAAG,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;wBAC5C,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,uBAAuB,EAAE,IAAI,EAAE,CAAC,CAAC;wBACnI,MAAM,CAAC,WAAW,CAAC;oBACvB,CAAC,CAAC;oBACF,MAAM,CAAC,WAAW,CAAC;gBACvB,CAAC,CAAC,CAAC,CAAC;QACR,CAAC;QApBM,iBAAO,GAAG,CAAC,UAAU,EAAE,eAAe,EAAE,oBAAoB,CAAC,CAAC;QAqBzE,gBAAC;IAAD,CAvBA,AAuBC,IAAA;IAvBY,kBAAS,YAuBrB,CAAA;IACD,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAE7C;QAEI,gBAAY,OAAO;YACf,OAAO,CAAC,UAAU,EAAE,CAAC;QACzB,CAAC;QAHM,cAAO,GAAG,CAAC,SAAS,CAAC,CAAA;QAIhC,aAAC;IAAD,CALA,AAKC,IAAA;IALY,eAAM,SAKlB,CAAA;IACD,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAEvC,kBAAkB;IAClB,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;IAClD,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;AACtD,CAAC,EAtCM,QAAQ,KAAR,QAAQ,QAsCd","file":"appConfig.js","sourcesContent":["module megamime {\r\n    export class appConfig\r\n    {\r\n        static $inject = ['$provide', '$httpProvider', '$mdThemingProvider'];\r\n        constructor($provide: angular.auto.IProvideService, $httpProvider: ng.IHttpProvider, $mdThemingProvider: ng.material.IThemingProvider) {\r\n            // Add the interceptor to the $httpProvider.\r\n            $httpProvider.interceptors.push('apiInterceptor');\r\n            $httpProvider.useLegacyPromiseExtensions(false);\r\n\r\n            $mdThemingProvider.theme('default')\r\n                .primaryPalette('grey');\r\n\r\n            $provide.decorator('GridOptions', ['$delegate', function ($delegate) {\r\n                var gridOptions;\r\n                gridOptions = angular.copy($delegate);\r\n                gridOptions.initialize = function (options) {\r\n                    var initOptions;\r\n                    initOptions = $delegate.initialize(options);\r\n                    angular.extend(initOptions, { enableGridMenu: true, exporterMenuCsv: true, exporterMenuPdf: true, gridMenuShowHideColumns: true });\r\n                    return initOptions;\r\n                };\r\n                return gridOptions;\r\n            }]);\r\n        }\r\n    }\r\n    angular.module('megamine').config(appConfig);\r\n\r\n    export class appRun {\r\n        static $inject = ['session']\r\n        constructor(session) {\r\n            session.initialize();\r\n        }\r\n    }\r\n    angular.module('megamine').run(appRun);\r\n   \r\n    //global variables\r\n    angular.module('megamine').value('toastr', toastr)\r\n    angular.module('megamine').value('moment', moment)\r\n}\r\n"],"sourceRoot":"/source/"}